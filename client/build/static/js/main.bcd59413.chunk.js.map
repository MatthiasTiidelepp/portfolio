{"version":3,"sources":["components/about/About.js","components/weather/CityDropdown.js","components/weather/WeatherInfo.js","services/weather/cities.js","services/weather/weather.js","components/weather/Weather.js","components/tictactoe/GridButton.js","components/tictactoe/Grid.js","components/tictactoe/GameInfo.js","components/tictactoe/TicTacToe.js","services/notes/notes.js","components/notes/Note.js","components/notes/NoteForm.js","components/notes/Notes.js","App.js","index.js"],"names":["About","className","href","CityDropdown","cities","city","handleDropdown","value","capital","onChange","map","c","WeatherInfo","weather","week","day","Date","getDay","children","push","id","Math","round","current","temp","description","src","icon","alt","i","daily","createTableChildren","exp","getAll","axios","get","then","res","data","lat","lng","params","Weather","useState","setCities","coordinates","setCity","setWeather","useEffect","cityService","receivedCities","sort","a","b","localeCompare","weatherService","receivedWeather","event","target","find","type","GridButton","handleButton","cell","onClick","TicTacToe","finished","conclusion","cells","GameInfo","handleRestart","setCurrent","1","2","3","4","5","6","7","8","9","setCells","grid","setGrid","full","setFull","setFinished","setConclusion","Grid","e","cellsArr","gridArr","cross","circle","baseUrl","create","newObject","post","remove","delete","Note","note","handleDelete","title","body","NoteForm","handleFormSubmit","newTitle","handleTitleChange","newBody","handleBodyChange","onSubmit","name","required","rows","cols","Notes","notes","setNotes","setNewTitle","setNewBody","noteService","initialNotes","preventDefault","noteObject","returnedNote","concat","n","filter","App","to","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bcd59413.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className=\"about\">\r\n      <div className=\"introduction\">\r\n        <h1 className=\"introductionTitle\">Welcome to my page</h1>\r\n        <p className=\"introductionBody\">\r\n          My name is Matthias Tiidelepp and I am a self-taught software developer from Tartu.\r\n          In 2020 I got my bachelor's degree in sculpture at Pallas University of Applied Sciences.\r\n          I learned a lot of practical skills there and found blacksmithing as one of my main hobbies.\r\n          <br />\r\n          <br />\r\n          I also studied 3D modelling (Blender) and 2D graphic design (Illustrator, Photoshop).\r\n          This sparked an interest in design in general. Since I already had an interest and familiarity with computers\r\n          software design was a good specialty to immerse myself in.\r\n          <br />\r\n          <br />\r\n          In January 2020 I started teaching myself how to program through various online courses.\r\n          I learned the basics of a few different programming languages like C#, Python, PHP, and Java and tried my hand at making a some small practice projects\r\n          but ultimately landed on website design with React and Node.js.\r\n          <br />\r\n          <br />\r\n          This portfolio website is my first go at making a full website from scratch.\r\n          It is at the same time a product that I need to demonstrate my skills and a learning project.\r\n          If you wish to see see my other projects or the code for this site, feel free to visit my <a className=\"introductionLink\" href=\"https://github.com/MatthiasTiidelepp\">GitHub page</a>.\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"projects\">\r\n        <div className=\"projectLinks\">\r\n          <a className=\"projectLink\" href=\"/weather\">Weather</a>\r\n          <a className=\"projectLink\" href=\"/tictactoe\">Tic Tac Toe</a>\r\n          <a className=\"projectLink\" href=\"/notes\">Notes</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\n\n// Component for the displaying the list of cities as a dropdown that has the functionality of changing the state 'city'\nconst CityDropdown = ({ cities, city, handleDropdown }) => {\n  return (\n    <select className=\"citiesDropdown\" value={city.capital} onChange={handleDropdown} >\n      {cities.map(c => {\n        return (\n          <option key={c.capital}>\n            {c.capital}\n          </option>\n        )\n      })}\n    </select>\n  )\n}\n\nexport default CityDropdown","import React from 'react'\n\n// Component for displaying the days of the week and the corresponding weather conditions (temperature, weather description and an icon representing the conditions) as a table\nconst WeatherInfo = ({ weather }) => {\n\n  // An array of weekdays and the current date to generate weekday names for the forecast\n  const week = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday'\n  ]\n  const day = new Date().getDay()\n\n  // Function that generates rows and cells for the weathertable\n  const createTableChildren = () => {\n    // Initialize an emtpy array that will be returned at the end of the function\n    let children = []\n\n    // Push table row to the 'children' array with the current day's weather information\n    children.push(\n      <tr key={0}>\n        <td id=\"day\" className=\"weatherText\">today:</td>\n        <td id=\"temperature\" className=\"weatherText\">{Math.round(weather.current.temp)} °C</td>\n        <td id=\"description\" className=\"weatherText\">{weather.current.weather[0].description}</td>\n        <td><img className=\"weatherImage\" src={`http://openweathermap.org/img/wn/${weather.current.weather[0].icon}.png`} alt=\"current weather icon\" /></td>\n      </tr>\n    )\n\n    // A for loop that runs 6 times (once for each remaining day of the week) and pushes a row to the 'children' array with each day's weather information\n    for (let i = 1; i < 7; i++) {\n      children.push(\n        <tr key={i}>\n          <td id=\"day\" className=\"weatherText\">{week[(day + i) % 7]}:</td>\n          <td id=\"temperature\" className=\"weatherText\">{Math.round(weather.daily[i - 1].temp.day)} °C</td>\n          <td id=\"description\" className=\"weatherText\">{weather.daily[i - 1].weather[0].description}</td>\n          <td><img className=\"weatherImage\" src={`http://openweathermap.org/img/wn/${weather.daily[i - 1].weather[0].icon}.png`} alt=\"current weather icon\" /></td>\n        </tr>\n      )\n    }\n    return children\n  }\n\n  return (\n    <table className=\"weatherTable\">\n      <tbody>\n        {createTableChildren()}\n      </tbody>\n    </table>\n  )\n}\n\nexport default WeatherInfo","import axios from 'axios'\r\nconst baseUrl = '/api/cities'\r\n\r\nconst getAll = () => {\r\n  const req = axios.get(baseUrl)\r\n  return req.then(res => res.data)\r\n}\r\n\r\nconst exp = { getAll }\r\nexport default exp","import axios from 'axios'\r\nconst baseUrl = '/api/weather'\r\n\r\nconst getAll = (lat, lng) => {\r\n  const req = axios\r\n    .get(\r\n      baseUrl, {\r\n        params: {\r\n          lat: lat,\r\n          lng: lng\r\n        }\r\n      }\r\n    )\r\n  return req.then(res => res.data)\r\n}\r\n\r\nconst exp = { getAll }\r\nexport default exp","import React, { useState, useEffect } from 'react'\r\nimport CityDropdown from './CityDropdown'\r\nimport WeatherInfo from './WeatherInfo'\r\nimport cityService from '../../services/weather/cities'\r\nimport weatherService from '../../services/weather/weather'\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst Weather = () => {\r\n  // State for the list of cities\r\n  const [ cities, setCities ] = useState()\r\n  // State for the current dropdown value\r\n  const [ city, setCity ] = useState({ capital: 'Tallinn', coordinates: [59, 26] })\r\n  // State for the weather data fetched from backend\r\n  const [ weather, setWeather ] = useState()\r\n\r\n  // Getting a list of european capitals and their coordinates\r\n  // This will run once when the page is loaded\r\n  useEffect( () => {\r\n    cityService\r\n      .getAll()\r\n      .then(receivedCities => {\r\n        // Sort the cities alphabetically before setting as state\r\n        setCities(\r\n          receivedCities.sort((a, b) => a.capital.localeCompare(b.capital))\r\n        )\r\n      })\r\n  }, [])\r\n\r\n  // Getting an object with info of weather conditions in the selected city.\r\n  // This will run and get new conditions every time the state for the currently selected city updates.\r\n  useEffect(() => {\r\n    weatherService\r\n      .getAll(city.coordinates[0], city.coordinates[1])\r\n      .then(receivedWeather => {\r\n        setWeather(receivedWeather)\r\n      })\r\n  }, [ city ])\r\n\r\n  // Event handler for setting the current city to the one chosen from dropdown\r\n  const handleDropdown = (event)  => {\r\n    setCity(\r\n      {\r\n        'capital': event.target.value,\r\n        'coordinates': cities.find(c => c.capital === event.target.value).coordinates\r\n      }\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"weather\">\r\n      {!cities || !weather ?\r\n        <Loader\r\n          className=\"weatherLoader\"\r\n          type=\"TailSpin\"\r\n        />\r\n        : <div className=\"weatherTableContainer\">\r\n        \r\n          <div className=\"dropdownContainer\">\r\n            <CityDropdown\r\n              cities={cities}\r\n              city={city}\r\n              setCity={setCity}\r\n              handleDropdown={handleDropdown}\r\n            />\r\n          </div>\r\n\r\n          <WeatherInfo\r\n            weather={weather}\r\n          />\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Weather","import React from 'react'\r\n\r\nconst GridButton = ({ id, handleButton, cell }) => {\r\n  return (\r\n    <button className=\"gridButton\" id={id} onClick={handleButton}>\r\n      {cell}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default GridButton\r\n","import React from 'react'\r\nimport GridButton from './GridButton'\r\n\r\nconst TicTacToe = ({ finished, conclusion, handleButton, cells }) => {\r\n  return (\r\n    <div className=\"gameGrid\">\r\n      {finished ?\r\n        \r\n        <div className=\"gameConclusion\">\r\n          <p className=\"gameConclusionText\">{conclusion}</p>\r\n        </div> :\r\n\r\n        <div className=\"cells\">\r\n          <GridButton id=\"1\" handleButton={handleButton} cell={cells[0]['1']} />\r\n          <GridButton id=\"2\" handleButton={handleButton} cell={cells[0]['2']} />\r\n          <GridButton id=\"3\" handleButton={handleButton} cell={cells[0]['3']} />\r\n\r\n          <GridButton id=\"4\" handleButton={handleButton} cell={cells[1]['4']} />\r\n          <GridButton id=\"5\" handleButton={handleButton} cell={cells[1]['5']} />\r\n          <GridButton id=\"6\" handleButton={handleButton} cell={cells[1]['6']} />\r\n\r\n          <GridButton id=\"7\" handleButton={handleButton} cell={cells[2]['7']} />\r\n          <GridButton id=\"8\" handleButton={handleButton} cell={cells[2]['8']} />\r\n          <GridButton id=\"9\" handleButton={handleButton} cell={cells[2]['9']} />\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TicTacToe\r\n","import React from 'react'\r\nimport { MdRadioButtonUnchecked } from 'react-icons/md';\r\nimport { MdClose } from 'react-icons/md';\r\nimport { MdRefresh } from 'react-icons/md';\r\n\r\nfunction GameInfo({ handleRestart, current, finished }) {\r\n  return (\r\n    <div className=\"gameInfo\">\r\n      <button className=\"restartButton\" onClick={handleRestart}><MdRefresh className=\"restartIcon\" /></button>\r\n      {finished ?\r\n        null\r\n        : <p className=\"current\">\r\n            {current === 'x' ? <MdClose /> : <MdRadioButtonUnchecked />}\r\n          </p>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GameInfo","import React, { useState } from 'react'\r\nimport Grid from './Grid'\r\nimport GameInfo from './GameInfo'\r\n\r\nimport { MdRadioButtonUnchecked } from 'react-icons/md';\r\nimport { MdClose } from 'react-icons/md';\r\n\r\nfunction TicTacToe() {\r\n  // State for current symbol\r\n  const [current, setCurrent] = useState('x')\r\n  // State for the grid and values it contains\r\n  const [cells, setCells] = useState([{1: '', 2: '',3: ''}, {4: '', 5: '', 6: ''}, {7: '', 8: '', 9: ''}])\r\n  // A grid state for checking the victory conditions\r\n  const [grid, setGrid] = useState([{1: '', 2: '',3: ''}, {4: '', 5: '', 6: ''}, {7: '', 8: '', 9: ''}])\r\n  // State for checking if the board is full (9) without meeting any victory condition, which means a draw\r\n  const [full, setFull] = useState(1)\r\n  // State for checking if a victory or draw condition has been met\r\n  const [finished, setFinished] = useState(false)\r\n  // State for which symbol won or draw\r\n  const [conclusion, setConclusion] = useState('')\r\n\r\n  const handleRestart = () => {\r\n    setCurrent('x')\r\n    setCells([{1: '', 2: '',3: ''}, {4: '', 5: '', 6: ''}, {7: '', 8: '', 9: ''}])\r\n    setGrid([{1: '', 2: '',3: ''}, {4: '', 5: '', 6: ''}, {7: '', 8: '', 9: ''}])\r\n\r\n    setFull(1)\r\n    setFinished(false)\r\n    setConclusion('')\r\n  }\r\n\r\n  const handleButton = (e) => {\r\n    let id = e.target.id\r\n    let cellsArr = cells\r\n    let gridArr = grid\r\n    let cross = <MdClose />\r\n    let circle = <MdRadioButtonUnchecked />\r\n    \r\n    // Change clicked button's text (to 'x' or 'o'), based on the currently active letter\r\n    if (id === '1' || id === '2' || id === '3') {\r\n\r\n      if (cells[0][`${id}`] === '') {\r\n        cellsArr[0][`${id}`] = (current === 'x' ? cross : circle)\r\n        gridArr[0][`${id}`] = current\r\n        current === 'x' ? setCurrent('o') : setCurrent('x')\r\n        setFull(full + 1)\r\n      } else {\r\n        cellsArr = cells\r\n      }\r\n    } else if (id === '4' || id === '5' || id === '6') {\r\n      \r\n      if (cells[1][`${id}`] === '') {\r\n        cellsArr[1][`${id}`] = (current === 'x' ? cross : circle)\r\n        gridArr[1][`${id}`] = current\r\n        current === 'x' ? setCurrent('o') : setCurrent('x')\r\n        setFull(full + 1)\r\n      } else {\r\n        cellsArr = cells\r\n      }\r\n    } else {\r\n\r\n      if (cells[2][`${id}`] === '') {\r\n        cellsArr[2][`${id}`] = (current === 'x' ? cross : circle)\r\n        gridArr[2][`${id}`] = current\r\n        current === 'x' ? setCurrent('o') : setCurrent('x')\r\n        setFull(full + 1)\r\n      } else {\r\n        cellsArr = cells\r\n      }\r\n    }\r\n    \r\n    setCells(cellsArr)\r\n    \r\n    // Check if victory or draw condition is met and end the game if necessary\r\n    if (\r\n      // Conditions for rows\r\n      (grid[0]['1'] === 'x' &&\r\n      grid[0]['2'] === 'x' &&\r\n      grid[0]['3'] === 'x')\r\n      ||\r\n      (grid[0]['1'] === 'o' &&\r\n      grid[0]['2'] === 'o' &&\r\n      grid[0]['3'] === 'o')\r\n      ||\r\n      (grid[1]['4'] === 'x' &&\r\n      grid[1]['5'] === 'x' &&\r\n      grid[1]['6'] === 'x')\r\n      ||\r\n      (grid[1]['4'] === 'o' &&\r\n      grid[1]['5'] === 'o' &&\r\n      grid[1]['6'] === 'o')\r\n      ||\r\n      (grid[2]['7'] === 'x' &&\r\n      grid[2]['8'] === 'x' &&\r\n      grid[2]['9'] === 'x')\r\n      ||\r\n      (grid[2]['7'] === 'o' &&\r\n      grid[2]['8'] === 'o' &&\r\n      grid[2]['9'] === 'o')\r\n\r\n      ||\r\n\r\n      // Conditions for columns\r\n      (grid[0]['1'] === 'x' &&\r\n      grid[1]['4'] === 'x' &&\r\n      grid[2]['7'] === 'x')\r\n      ||\r\n      (grid[0]['1'] === 'o' &&\r\n      grid[1]['4'] === 'o' &&\r\n      grid[2]['7'] === 'o')\r\n      ||\r\n      (grid[0]['2'] === 'x' &&\r\n      grid[1]['5'] === 'x' &&\r\n      grid[2]['8'] === 'x')\r\n      ||\r\n      (grid[0]['2'] === 'o' &&\r\n      grid[1]['5'] === 'o' &&\r\n      grid[2]['8'] === 'o')\r\n      ||\r\n      (grid[0]['3'] === 'x' &&\r\n      grid[1]['6'] === 'x' &&\r\n      grid[2]['9'] === 'x')\r\n      ||\r\n      (grid[0]['3'] === 'o' &&\r\n      grid[1]['6'] === 'o' &&\r\n      grid[2]['9'] === 'o')\r\n      \r\n      ||\r\n\r\n      // Conditions for diagonals\r\n      (grid[0]['1'] === 'x' &&\r\n      grid[1]['5'] === 'x' &&\r\n      grid[2]['9'] === 'x')\r\n      ||\r\n      (grid[0]['1'] === 'o' &&\r\n      grid[1]['5'] === 'o' &&\r\n      grid[2]['9'] === 'o')\r\n      ||\r\n      (grid[0]['3'] === 'x' &&\r\n      grid[1]['5'] === 'x' &&\r\n      grid[2]['7'] === 'x')\r\n      ||\r\n      (grid[0]['3'] === 'o' &&\r\n      grid[1]['5'] === 'o' &&\r\n      grid[2]['7'] === 'o')\r\n    ) {\r\n      if (current === 'x') {\r\n        setFinished(true)\r\n        setConclusion('X wins!')\r\n        // window.alert('x wins!')\r\n        // handleRestart()\r\n\r\n      } else {\r\n        setFinished(true)\r\n        setConclusion('O wins!')\r\n        // window.alert('o wins!')\r\n        // handleRestart()\r\n      }\r\n    // Condition for draw (board full without victory condition)\r\n    } else if (full === 9) {\r\n      setFinished(true)\r\n      setConclusion('Draw!')\r\n      // window.alert('Draw!')\r\n      // handleRestart()\r\n    }\r\n  }\r\n\r\n  return (\r\n      <div className=\"tictactoe\">\r\n        <GameInfo\r\n          handleRestart={handleRestart}\r\n          current={current}\r\n          finished={finished}\r\n        />\r\n  \r\n        <Grid\r\n          finished={finished}\r\n          conclusion={conclusion}\r\n          handleButton={handleButton}\r\n          cells={cells}\r\n        />\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default TicTacToe;\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n  const req = axios.get(baseUrl)\r\n  return req.then(res => res.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n  const req = axios.post(baseUrl, newObject)\r\n  return req.then(res => res.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const req = axios.delete(`${baseUrl}/${id}`)\r\n  return req.then(res => res.data)\r\n}\r\n\r\nconst exp = { getAll, create, remove }\r\nexport default exp","import React from 'react'\r\n\r\nconst Note = ({ note, handleDelete }) => {\r\n\r\n  return (\r\n    <div>\r\n        <li className=\"noteContainer\">\r\n          <div className=\"noteText\">\r\n            <h1 className=\"noteTitle\">{note.title}</h1>\r\n            <p className=\"noteBody\">{note.body}</p>\r\n          </div>\r\n          <button className=\"noteDeleteButton\" onClick={handleDelete}>Delete</button>\r\n        </li>\r\n        <hr className=\"noteDivider\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Note\r\n","import React from 'react'\r\n\r\nconst NoteForm = ({ handleFormSubmit, newTitle, handleTitleChange, newBody, handleBodyChange }) => {\r\n  return (\r\n    <form className=\"notesForm\" onSubmit={handleFormSubmit}>\r\n      <div className=\"title\">\r\n        <label className=\"titleLabel\">Title</label>\r\n        <input\r\n          className=\"titleInput\"\r\n          type=\"text\"\r\n          name=\"title\"\r\n          value={newTitle}\r\n          onChange={handleTitleChange}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"body\">\r\n        <label className=\"bodyLabel\">Content</label>\r\n        <textarea\r\n          className=\"bodyInput\"\r\n          name=\"body\"\r\n          rows=\"5\"\r\n          cols=\"33\"\r\n          value={newBody}\r\n          onChange={handleBodyChange}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"buttonContainer\">\r\n        <button className=\"submitButton\" type=\"submit\">Submit</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default NoteForm\r\n","import React, {useState, useEffect} from 'react'\r\nimport noteService from '../../services/notes/notes'\r\nimport Note from './Note';\r\nimport NoteForm from './NoteForm';\r\n\r\nconst Notes = () => {\r\n  const [notes, setNotes] = useState(null)\r\n  const [newTitle, setNewTitle] = useState('')\r\n  const [newBody, setNewBody] = useState('')\r\n\r\n  useEffect(() => {\r\n    noteService\r\n      .getAll()\r\n      .then(initialNotes => {\r\n        setNotes(initialNotes)\r\n      })\r\n  }, [])\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    const noteObject = {\r\n      title: newTitle,\r\n      body: newBody\r\n    }\r\n\r\n    noteService\r\n      .create(noteObject)\r\n      .then(returnedNote => {\r\n        setNotes(notes.concat(returnedNote))\r\n        setNewTitle('')\r\n        setNewBody('')\r\n      })\r\n  }\r\n\r\n  const handleTitleChange = (e) => {\r\n    setNewTitle(e.target.value)\r\n  }\r\n\r\n  const handleBodyChange = (e) => {\r\n    setNewBody(e.target.value)\r\n  }\r\n\r\n  const handleDelete = (id) => {\r\n    noteService\r\n      .remove(id)\r\n      .then(() => {\r\n        // window.alert(`Deleted \"${notes.find(note => note.id === id).title}\"`)\r\n        setNotes(notes.filter(note => note.id !== id))\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"notes\">\r\n      \r\n      {!notes ?\r\n        null :\r\n        <NoteForm\r\n          handleFormSubmit={handleFormSubmit}\r\n          newTitle={newTitle}\r\n          handleTitleChange={handleTitleChange}\r\n          newBody={newBody}\r\n          handleBodyChange={handleBodyChange}\r\n        />\r\n      }\r\n\r\n      <ul className=\"noteList\">\r\n        {!notes ?\r\n          null :\r\n          notes.map(n => \r\n            <Note\r\n              key={n.id}\r\n              note={n}\r\n              handleDelete={() => handleDelete(n.id)}\r\n            />\r\n          )\r\n        }\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notes","import React from 'react'\nimport './App.scss'\n\nimport {\n  BrowserRouter as Router,\n  Switch, Route, Link\n} from \"react-router-dom\"\n\n\nimport About from './components/about/About'\nimport Weather from './components/weather/Weather'\nimport TicTacToe from './components/tictactoe/TicTacToe'\nimport Notes from './components/notes/Notes'\nimport Footer from './components/Footer'\n\nconst App = () => {\n  return (\n    <div className=\"page\">\n      <div className=\"content\">\n        <Router>\n          <div className=\"navBar\">\n            <div className=\"pageTitleContainer\">\n              <a className=\"pageTitle\" href=\"/\">MATTHIAS TIIDELEPP</a>\n            </div>\n  \n            <div className=\"navItems\">\n              <Link className=\"navItem\" to=\"/\">ABOUT</Link>\n              <Link className=\"navItem\" to=\"/weather\">WEATHER</Link>\n              <Link className=\"navItem\" to=\"/tictactoe\">TIC TAC TOE</Link>\n              <Link className=\"navItem\" to=\"/notes\">NOTES</Link>\n            </div>\n          </div>\n    \n          <Switch>\n            <Route path=\"/weather\" component={Weather} />\n            <Route path=\"/tictactoe\" component={TicTacToe} />\n            <Route path=\"/notes\" component={Notes} />\n            <Route path=\"/\" component={About} />\n          </Switch>\n        </Router>\n      </div>\n\n      {/* <Footer /> */}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}